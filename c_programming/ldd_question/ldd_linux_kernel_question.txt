Process management:-

1) how to manipulate the current process.

2) what are kernel thread.

3) how threads are implemented in linux kernel.

4) What are different state of a process in lunix.

5) what is difference between process and thread.

6) generally what resources are shared between threads.

7) what is process descriptor

8) what is task_struct.

9) what is therad_info structure for.

10) what was the need of thread_info structure.

11) difference betwen fork() and vfork()

12) what is process context.

13) what is zombie process.

14) how parent less process is handles in linux.

 

 

Process Scheduling:-

1) what is process scheduling

2) what is cooperative multitasking and pre-emptive multitasking.

3) what is yielding.

4) what is limitation of cooperative multitasking.

5) I/O bound versus Processor bound process.

6) what is process priority.

7) What kind of priority is maintained in linux.

8) what is nice value.

9) what is virtual run time.

10) what are the available scheduling classes in linux.

11) which type os scheduling used in linux.

12)  how next task is picked for scheduling.

13) what is scheduler entry point in linux.

14) what is waitqueus.

15) How context switching is handled in linux.

16) what is user preemption and kernel preemption

 

Syscalls:-

1) what is syscalls.

2) how system calls are implemented in linux.

3) what happens when process in userspace calls a syscall.

4) what is the need of verifying parameter in definition of syscall.

5) what is system calls context.

6) why it is not recommended to writing new syscall.

 

 

Interrupts and interrupt handlers:-

1) what is interrupt

2) what is interrupt handler or ISR.

3) what is top halves and bottom halves.

4) How interrupt is registered.

5) what are different interrupt handler flags.

6) How interrupt are freed.

7) what are the considerations needs to taken care while writing interrupt handler.

8) what are shared handlers.

9) what is interrupt context.

10) how to disable and enable interrupts.

11) what are different bottom halves techniques in linux.

12) what is tasklets , softirq and workqueus and difference among them.

13) when to choose which bottom halves.

14) how to implements softirq , tasklets and workwues.

15) how to schedule tasklet.

16) what is ksoftirq.

17) How to disable bottom halves.

18) How locking between bottomhalves handled.

19) Why we need preemption.

 

Kernel Synchronization:-

1) what is synchronization

2) what is critical section

3) what is race condition.

4) why we need to take care of synchronization

5) what is various synchronization techniques in linux.

6) what is deadlocks.

7) what is atomic operations.

8) what is spin locks.

9) what is reader-writer spin lock.

10) what is semaphore.

11) what is binary semaphore.

12) what is difference between semaphore and spin lock.

13) when to choose what among spin lock and semaphore.

14) what is difference between semaphore and mutex.

15) what is preemption disabling and what is the use of this.

 

Kernel timers

1) what is tick rate and jiffies.

2) what are the various way of applying delay in linux.

3) what is blocking and non blocking call

4) what is Real time clock (RTC).

5) how busy looping is implemented in linux.

 

Memory management

1) how memory is managed in linux.

2) what are pages.

3) what are different memory zones in linux.

4) how to allocated pages.

5) how to freeing page.

6) what us kmalloc and what are action modifier we can pass while using kmalloc.

7) what is zone modifier in linux.

8) what is vmalloc

 

 

Virtual file system:-

1) what is virtual file system and what is the need of it in linux.

2) are are different object types in VFS.

3) what are the operations possible on inode and superblock objects.

 

Process Address Space:-

1) what is process address space.

2) what is memory descriptor in linux and which structure represents it.

3) how to allocate and destroy a memory descriptor

4) does kernel thread  has any association with mm_struct.

5) what is VMA and what are various VMA operations possible in linux kernel.

6) how to manipulate memory area in linux.

7) what mmap and do_mmap().

8) what is page tables.

 

Device driver  questions:-

 

1) What is device driver and what is the need of it.

2) what are different kind of devices.

3) what is module in linux.

4) how mudules are loaded in linux.

5) difference between insmod and modprobe.

6) how parameters are shared between driver modules.

7) what are IOCTLS.

8) what is syscalls.

9) what are the benefits of syscalls.

10) how character driver is registered in linux.

11) what is init and exit function of a driver.

12) how and when init and exit function of driver get called.

13) what is probe function.

14) when probe is get called.

15) what is platform devices.

16) what is device tree.

17) what are the benefits of device tree over board files.

18) what is sysfs and procfs.

19) how logs are printed in linux kernel and what are the logs level available in linux.

20) what is copy_to_user and copy_from_user.

21) what do you mean by kernel configuration and what are the various way of configuring kernel.

22) what is menuconfig.

23) what is ioremap

24) what is seagmentation fault.

25) what are the various ways od debugging linux kernel.

26) how linux kernel boots.

27) what is zimage and bzimage.

28)  what are different booting arguments in linux.

29) how parameter are passed from boot loader to kernel.

30) what is ATAGS.

31) from which file kernel execution starts.

32) what is bootloader.

33) what is primary and secondary bootloader.

34) why we need two bootloader.

35) difference between poll and select.

36) what is priority inheritance and priority inversion.

37) what are different type of kernel.

38) what is DMA.

39) what is cache coherency.

40) what is copy on write.

41) what is highmem and lowmem.

42) what happens if we pass invalid address from userspace by using ioctls.

43) what are different ipc mechanism in linux.

44) what are sockets.

45) how page fault is handled in linux.

46) difference between memory based io and port based io.

47) what is I2c and SPI.

48) how physical to virtual translations works in linux.

49) what is thrashing, segmentation and fragmentation.

50) what is preempt_count and what is the need of that.